#version 410

in vec2 uvs;

uniform sampler2D screen;
uniform sampler2D depthBuffer;

out vec4 fragColor;


void main()
{
	vec2 texel = 1.0f / textureSize(screen, 0).xy; 
	// 9-tap box kernel 
	vec4 colorX = vec4(0);
	colorX += -texture(screen, uvs + vec2(-texel.x, texel.y)); 
	colorX += -2*texture(screen, uvs + vec2(-texel.x, 0)); 
	colorX += -texture(screen, uvs + vec2(-texel.x, -texel.y)); 
	colorX += texture(screen, uvs + vec2(texel.x, texel.y)); 
	colorX += 2*texture(screen, uvs + vec2(texel.x, 0)); 
	colorX += texture(screen, uvs + vec2(texel.x, -texel.y));

	vec4 colorY = vec4(0);
	colorY += -texture(screen, uvs + vec2(-texel.x, texel.y)); 
	colorY += -2*texture(screen, uvs + vec2(0, texel.y)); 
	colorY += -texture(screen, uvs + vec2(texel.x, texel.y)); 
	colorY += texture(screen, uvs + vec2(-texel.x, -texel.y)); 
	colorY += 2*texture(screen, uvs + vec2(0, -texel.y)); 
	colorY += texture(screen, uvs + vec2(texel.x, -texel.y));

	vec4 color = 0.2*sqrt(pow(colorX, vec4(2)) + pow(colorX, vec4(2)));
	color = vec4(vec3(max(max(color.x, color.y), color.z)), 1);
	vec4 sampledColor =  texture(screen, uvs);
	fragColor = vec4(max(sampledColor.xyz, color.xyz), 1);
}